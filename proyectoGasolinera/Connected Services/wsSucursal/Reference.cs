//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace proyectoGasolinera.wsSucursal {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="wsSucursal.wsSucursalSoap")]
    public interface wsSucursalSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/listado_sucursales", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet listado_sucursales();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/listado_sucursales", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> listado_sucursalesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/buscar_sucursal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet buscar_sucursal(int idSucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/buscar_sucursal", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> buscar_sucursalAsync(int idSucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertar_sucursal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int insertar_sucursal(string nombreSucursal, string direccionSucursal, int telefonoSucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertar_sucursal", ReplyAction="*")]
        System.Threading.Tasks.Task<int> insertar_sucursalAsync(string nombreSucursal, string direccionSucursal, int telefonoSucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/actualizar_sucursal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int actualizar_sucursal(int idSucursal, string nombreSucursal, string direccionSucursal, int telefonoSucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/actualizar_sucursal", ReplyAction="*")]
        System.Threading.Tasks.Task<int> actualizar_sucursalAsync(int idSucursal, string nombreSucursal, string direccionSucursal, int telefonoSucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/eliminar_sucursal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int eliminar_sucursal(int idSucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/eliminar_sucursal", ReplyAction="*")]
        System.Threading.Tasks.Task<int> eliminar_sucursalAsync(int idSucursal);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface wsSucursalSoapChannel : proyectoGasolinera.wsSucursal.wsSucursalSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class wsSucursalSoapClient : System.ServiceModel.ClientBase<proyectoGasolinera.wsSucursal.wsSucursalSoap>, proyectoGasolinera.wsSucursal.wsSucursalSoap {
        
        public wsSucursalSoapClient() {
        }
        
        public wsSucursalSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public wsSucursalSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wsSucursalSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wsSucursalSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet listado_sucursales() {
            return base.Channel.listado_sucursales();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> listado_sucursalesAsync() {
            return base.Channel.listado_sucursalesAsync();
        }
        
        public System.Data.DataSet buscar_sucursal(int idSucursal) {
            return base.Channel.buscar_sucursal(idSucursal);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> buscar_sucursalAsync(int idSucursal) {
            return base.Channel.buscar_sucursalAsync(idSucursal);
        }
        
        public int insertar_sucursal(string nombreSucursal, string direccionSucursal, int telefonoSucursal) {
            return base.Channel.insertar_sucursal(nombreSucursal, direccionSucursal, telefonoSucursal);
        }
        
        public System.Threading.Tasks.Task<int> insertar_sucursalAsync(string nombreSucursal, string direccionSucursal, int telefonoSucursal) {
            return base.Channel.insertar_sucursalAsync(nombreSucursal, direccionSucursal, telefonoSucursal);
        }
        
        public int actualizar_sucursal(int idSucursal, string nombreSucursal, string direccionSucursal, int telefonoSucursal) {
            return base.Channel.actualizar_sucursal(idSucursal, nombreSucursal, direccionSucursal, telefonoSucursal);
        }
        
        public System.Threading.Tasks.Task<int> actualizar_sucursalAsync(int idSucursal, string nombreSucursal, string direccionSucursal, int telefonoSucursal) {
            return base.Channel.actualizar_sucursalAsync(idSucursal, nombreSucursal, direccionSucursal, telefonoSucursal);
        }
        
        public int eliminar_sucursal(int idSucursal) {
            return base.Channel.eliminar_sucursal(idSucursal);
        }
        
        public System.Threading.Tasks.Task<int> eliminar_sucursalAsync(int idSucursal) {
            return base.Channel.eliminar_sucursalAsync(idSucursal);
        }
    }
}
