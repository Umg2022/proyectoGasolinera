//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace proyectoGasolinera.wsVenta {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="wsVenta.wsVentaSoap")]
    public interface wsVentaSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/listado_Venta", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet listado_Venta();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/listado_Venta", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> listado_VentaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertar_Venta", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int insertar_Venta(string idFactura, int idCliente, int idEmpleado, double montoTotal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertar_Venta", ReplyAction="*")]
        System.Threading.Tasks.Task<int> insertar_VentaAsync(string idFactura, int idCliente, int idEmpleado, double montoTotal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertar_detalleVenta", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int insertar_detalleVenta(string idFactura, int idTipoCombustible, int idFormaPago, int idBombaCombustible, double cantidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertar_detalleVenta", ReplyAction="*")]
        System.Threading.Tasks.Task<int> insertar_detalleVentaAsync(string idFactura, int idTipoCombustible, int idFormaPago, int idBombaCombustible, double cantidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/actualizar_Venta", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int actualizar_Venta(int idFactura, int idCliente, int idEmpleado, int idTIpoCombustible, int idFormaPago, int idBombaCombustible, int idSucursal, double cantidadVendida, double totalAPagar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/actualizar_Venta", ReplyAction="*")]
        System.Threading.Tasks.Task<int> actualizar_VentaAsync(int idFactura, int idCliente, int idEmpleado, int idTIpoCombustible, int idFormaPago, int idBombaCombustible, int idSucursal, double cantidadVendida, double totalAPagar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/eliminar_Venta", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int eliminar_Venta(int idFactura);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/eliminar_Venta", ReplyAction="*")]
        System.Threading.Tasks.Task<int> eliminar_VentaAsync(int idFactura);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/buscar_venta", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet buscar_venta(string idVenta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/buscar_venta", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> buscar_ventaAsync(string idVenta);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface wsVentaSoapChannel : proyectoGasolinera.wsVenta.wsVentaSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class wsVentaSoapClient : System.ServiceModel.ClientBase<proyectoGasolinera.wsVenta.wsVentaSoap>, proyectoGasolinera.wsVenta.wsVentaSoap {
        
        public wsVentaSoapClient() {
        }
        
        public wsVentaSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public wsVentaSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wsVentaSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wsVentaSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet listado_Venta() {
            return base.Channel.listado_Venta();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> listado_VentaAsync() {
            return base.Channel.listado_VentaAsync();
        }
        
        public int insertar_Venta(string idFactura, int idCliente, int idEmpleado, double montoTotal) {
            return base.Channel.insertar_Venta(idFactura, idCliente, idEmpleado, montoTotal);
        }
        
        public System.Threading.Tasks.Task<int> insertar_VentaAsync(string idFactura, int idCliente, int idEmpleado, double montoTotal) {
            return base.Channel.insertar_VentaAsync(idFactura, idCliente, idEmpleado, montoTotal);
        }
        
        public int insertar_detalleVenta(string idFactura, int idTipoCombustible, int idFormaPago, int idBombaCombustible, double cantidad) {
            return base.Channel.insertar_detalleVenta(idFactura, idTipoCombustible, idFormaPago, idBombaCombustible, cantidad);
        }
        
        public System.Threading.Tasks.Task<int> insertar_detalleVentaAsync(string idFactura, int idTipoCombustible, int idFormaPago, int idBombaCombustible, double cantidad) {
            return base.Channel.insertar_detalleVentaAsync(idFactura, idTipoCombustible, idFormaPago, idBombaCombustible, cantidad);
        }
        
        public int actualizar_Venta(int idFactura, int idCliente, int idEmpleado, int idTIpoCombustible, int idFormaPago, int idBombaCombustible, int idSucursal, double cantidadVendida, double totalAPagar) {
            return base.Channel.actualizar_Venta(idFactura, idCliente, idEmpleado, idTIpoCombustible, idFormaPago, idBombaCombustible, idSucursal, cantidadVendida, totalAPagar);
        }
        
        public System.Threading.Tasks.Task<int> actualizar_VentaAsync(int idFactura, int idCliente, int idEmpleado, int idTIpoCombustible, int idFormaPago, int idBombaCombustible, int idSucursal, double cantidadVendida, double totalAPagar) {
            return base.Channel.actualizar_VentaAsync(idFactura, idCliente, idEmpleado, idTIpoCombustible, idFormaPago, idBombaCombustible, idSucursal, cantidadVendida, totalAPagar);
        }
        
        public int eliminar_Venta(int idFactura) {
            return base.Channel.eliminar_Venta(idFactura);
        }
        
        public System.Threading.Tasks.Task<int> eliminar_VentaAsync(int idFactura) {
            return base.Channel.eliminar_VentaAsync(idFactura);
        }
        
        public System.Data.DataSet buscar_venta(string idVenta) {
            return base.Channel.buscar_venta(idVenta);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> buscar_ventaAsync(string idVenta) {
            return base.Channel.buscar_ventaAsync(idVenta);
        }
    }
}
