//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace proyectoGasolinera.wsProveedor {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="wsProveedor.wsProveedoresSoap")]
    public interface wsProveedoresSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/listado_proveedores", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet listado_proveedores();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/listado_proveedores", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> listado_proveedoresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/buscar_proveedor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet buscar_proveedor(int idProveedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/buscar_proveedor", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> buscar_proveedorAsync(int idProveedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertar_proveedor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int insertar_proveedor(string nombreProveedor, int telefonoProveedor, string emailProveedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertar_proveedor", ReplyAction="*")]
        System.Threading.Tasks.Task<int> insertar_proveedorAsync(string nombreProveedor, int telefonoProveedor, string emailProveedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/actualizar_proveedor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int actualizar_proveedor(int idProveedor, string nombreProveedor, int telefonoProveedor, string emailProveedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/actualizar_proveedor", ReplyAction="*")]
        System.Threading.Tasks.Task<int> actualizar_proveedorAsync(int idProveedor, string nombreProveedor, int telefonoProveedor, string emailProveedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/eliminar_proveedor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int eliminar_proveedor(int idProveedor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/eliminar_proveedor", ReplyAction="*")]
        System.Threading.Tasks.Task<int> eliminar_proveedorAsync(int idProveedor);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface wsProveedoresSoapChannel : proyectoGasolinera.wsProveedor.wsProveedoresSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class wsProveedoresSoapClient : System.ServiceModel.ClientBase<proyectoGasolinera.wsProveedor.wsProveedoresSoap>, proyectoGasolinera.wsProveedor.wsProveedoresSoap {
        
        public wsProveedoresSoapClient() {
        }
        
        public wsProveedoresSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public wsProveedoresSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wsProveedoresSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wsProveedoresSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet listado_proveedores() {
            return base.Channel.listado_proveedores();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> listado_proveedoresAsync() {
            return base.Channel.listado_proveedoresAsync();
        }
        
        public System.Data.DataSet buscar_proveedor(int idProveedor) {
            return base.Channel.buscar_proveedor(idProveedor);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> buscar_proveedorAsync(int idProveedor) {
            return base.Channel.buscar_proveedorAsync(idProveedor);
        }
        
        public int insertar_proveedor(string nombreProveedor, int telefonoProveedor, string emailProveedor) {
            return base.Channel.insertar_proveedor(nombreProveedor, telefonoProveedor, emailProveedor);
        }
        
        public System.Threading.Tasks.Task<int> insertar_proveedorAsync(string nombreProveedor, int telefonoProveedor, string emailProveedor) {
            return base.Channel.insertar_proveedorAsync(nombreProveedor, telefonoProveedor, emailProveedor);
        }
        
        public int actualizar_proveedor(int idProveedor, string nombreProveedor, int telefonoProveedor, string emailProveedor) {
            return base.Channel.actualizar_proveedor(idProveedor, nombreProveedor, telefonoProveedor, emailProveedor);
        }
        
        public System.Threading.Tasks.Task<int> actualizar_proveedorAsync(int idProveedor, string nombreProveedor, int telefonoProveedor, string emailProveedor) {
            return base.Channel.actualizar_proveedorAsync(idProveedor, nombreProveedor, telefonoProveedor, emailProveedor);
        }
        
        public int eliminar_proveedor(int idProveedor) {
            return base.Channel.eliminar_proveedor(idProveedor);
        }
        
        public System.Threading.Tasks.Task<int> eliminar_proveedorAsync(int idProveedor) {
            return base.Channel.eliminar_proveedorAsync(idProveedor);
        }
    }
}
